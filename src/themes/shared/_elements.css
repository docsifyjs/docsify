/* Elements */
/* ========================================================================== */
blockquote,
details,
figure,
form,
iframe,
ol,
output,
p,
pre,
table,
ul {
  margin-block: var(--margin-block);
}

small,
sub,
sup {
  font-size: var(--font-size-s);
}

a {
  color: inherit;

  /* NOTE:
    1. Safari requires separate text-decoration declarations (no shorthand)
    2. Safari requires applying text decoration declarations on nested anchor
       span rather then the link itself
    3. Set text-decoration-color to display underline effect
   */
  &,
  &.anchor > span {
    text-decoration-color: transparent;
    text-decoration-line: underline;
    text-decoration-style: solid;
    text-decoration-thickness: var(--link-text-decoration-thickness);
    text-underline-offset: 2px;
    transition:
      color 0.15s,
      text-decoration-color 0.15s;
  }

  &.anchor > span {
    &:hover {
      text-decoration-color: var(--theme-color);
    }
  }
}

blockquote {
  position: relative;
  overflow: auto;
  margin-inline: 0;
  padding: var(--blockquote-padding);
  border: solid var(--blockquote-border-color);
  border-width: var(--blockquote-border-width);
  border-radius: var(--blockquote-border-radius);
  background: var(--blockquote-bg);
  color: var(--blockquote-text);

  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

em {
  font-style: italic;
}

hr {
  margin-block: 2em;
  border: none;
  border-bottom: 1px solid var(--color-mono-2);
}

iframe {
  display: block;
  width: 100%;
  max-width: 100%;
  border: 1px solid var(--color-mono-2);
}

ins {
  text-decoration: underline;
}

kbd {
  display: inline-block;
  min-width: 2em;
  margin-inline: 0.2em;
  padding: 0.15em 0.3em;
  border-radius: var(--kbd-border-radius);
  box-shadow: var(--kbd-box-shadow);
  background: var(--kbd-bg);
  color: var(--kbd-color-text);
  font-size: var(--kbd-font-size);
  text-align: center;
  white-space: nowrap;
  cursor: default;
}

main {
  display: block;
  position: relative;
  width: 100vw;
  height: 100%;

  &.hidden {
    display: none;
  }
}

strong {
  color: var(--strong-color);
  font-weight: var(--strong-font-weight);
}

summary {
  cursor: pointer;

  > * {
    display: inline;
  }
}

/* Buttons */
/* ---------------------------------- */
a.button,
button[type],
input.button,
input:where([type='button'], [type='reset'], [type='submit']) {
  display: inline-block;
  border: 1px solid var(--color-mono-2);
  background: var(--color-mono-2);
  color: var(--color-text);
  cursor: pointer;
  vertical-align: middle;
  transition: scale 0.15s;

  &:focus,
  &:hover {
    scale: 1.05;
  }

  + & {
    margin-left: 0.25em;
  }

  /* Primary Button */
  &.primary {
    border-color: var(--button-bg);
    background: var(--button-bg);
    color: var(--button-color);
  }

  /* Secondary Button */
  &.secondary {
    border-color: var(--button-bg);
    background: transparent;
    color: var(--button-bg);
  }
}

a.button,
button[type],
input:where([type='button'], [type='reset'], [type='submit']) {
  padding: var(--button-padding);
  border-radius: var(--button-border-radius);
  text-decoration: none;
}

button[type],
input.button,
input:where([type='button'], [type='reset'], [type='submit']) {
  &:disabled {
    opacity: 0.6;
    filter: grayscale(100%);
    cursor: not-allowed;
    pointer-events: none;
  }
}

button:not([type]) {
  color: inherit;
}

/* Callouts */
/* ---------------------------------- */
.callout {
  position: relative;
  margin-block: calc(var(--margin-block) * 1.5);
  padding: var(--callout-padding);
  border: solid var(--_border-color);
  border-width: var(--callout-border-width);
  border-radius: var(--callout-border-radius);
  background: var(--_bg);
  color: var(--_color);

  /* Charm */
  &::before {
    content: var(--_charm-content);
    position: absolute;
    inset: var(--callout-charm-inset);
    height: var(--callout-charm-size);
    width: var(--callout-charm-size);
    translate: var(--callout-charm-translate);
    border-radius: var(--callout-charm-border-radius);
    background: var(--_charm-bg);
    color: var(--_charm-color);
    font-size: var(--callout-charm-font-size);
    font-weight: var(--strong-font-weight);
    line-height: var(--callout-charm-size);
    text-align: center;
  }

  code,
  strong {
    color: inherit;
  }

  code {
    background: rgba(0, 0, 0, 0.08);
  }

  &.important {
    --_bg: var(--important-bg);
    --_border-color: var(--important-border-color);
    --_charm-bg: var(--important-charm-bg);
    --_charm-color: var(--important-charm-color);
    --_charm-content: var(--important-charm-content);
    --_color: var(--important-color);
  }

  &.tip {
    --_bg: var(--tip-bg);
    --_border-color: var(--tip-border-color);
    --_charm-bg: var(--tip-charm-bg);
    --_charm-color: var(--tip-charm-color);
    --_charm-content: var(--tip-charm-content);
    --_color: var(--tip-color);
  }
}

/* Code, Output, Samp */
/* ---------------------------------- */
code,
output,
pre,
samp {
  border-radius: var(--border-radius);
}

code,
pre,
samp {
  font-family: var(--font-family-mono);
  font-size: var(--font-size-mono);
}

output,
pre[data-lang] {
  position: relative;

  &::after {
    content: attr(data-lang);
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    color: inherit;
    font-family: var(--font-family);
    font-size: var(--font-size-xs);
    letter-spacing: 0.02em;
    line-height: 1;
    opacity: 0.5;
  }
}

code,
samp {
  margin: 0 0.1em;
  padding: 0.2em 0.35em;
  white-space: pre-wrap;
}

code {
  background: var(--code-bg);
  color: var(--code-color);

  .token {
    position: relative;
    left: auto;
  }
}

output {
  display: block;
  padding: 1.7rem 1.4rem 1.4rem;
  border: 1px dotted var(--color-mono-2);

  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

pre[data-lang] {
  /* NOTE: !important declaration are intended to override third-party Prism theme values */
  padding: 0 !important;
  border-radius: var(--border-radius) !important;
  background: var(--codeblock-bg);
  font-family: var(--font-family-mono) !important;
  font-size: var(--font-size-mono) !important;
  color: var(--codeblock-color);
  word-wrap: normal;

  &:only-child {
    margin: 0;
  }

  > code {
    display: block;
    overflow: auto;
    margin: 0 !important;
    padding: 0 !important;
    padding-block: 1.5rem !important;
    padding-inline: 1.5rem !important;
    background: inherit;
    color: inherit;
    white-space: inherit;
  }
}

samp {
  background: var(--color-mono-1);
  color: var(--color-text);

  .token {
    position: relative;
    left: auto;
  }
}

/* Emoji */
/* ---------------------------------- */
.emoji {
  &:where(img) {
    height: 1.2em;
    vertical-align: middle;
  }

  &:where(span) {
    font-family: var(--font-family-emoji);
    font-size: var(--font-size-emoji);
    vertical-align: middle;
  }
}

/* Form Elements
/* ---------------------------------- */
fieldset,
input:not([type='checkbox']),
optgroup,
option,
select,
textarea {
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

fieldset,
input,
select,
textarea {
  max-width: 100%;
  border-radius: var(--form-element-border-radius);
}

input,
select,
textarea {
  padding: 0.25em 0.5em;
  border: var(--form-element-border);
}

input,
select,
textarea {
  background: var(--form-element-bg);
  color: var(--form-element-color);
}

input,
label,
select {
  vertical-align: middle;
}

fieldset {
  padding: 1em;
  border: 1px solid var(--color-mono-2);

  > :first-child,
  > legend + * {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

input[type='checkbox'],
input[type='radio'] {
  appearance: none;
  display: inline-block;
  position: relative;
  top: -0.1em;
  height: 1.1em;
  width: 1.1em;
  margin: 0;
  padding: 0;
}

input[type='checkbox'] {
  border-radius: min(var(--form-element-border-radius), 3px);

  &::after {
    content: '';
    display: inline-block;
    position: absolute;
    top: 43%;
    left: 50%;
    transform: rotate(40deg);
    translate: -50% -50%;
    height: 0.7em;
    width: 0.4em;
    border-bottom: 2px solid transparent;
    border-right: 2px solid transparent;
  }

  &:checked {
    border-color: var(--theme-color);
    background: var(--theme-color);

    &::after {
      border-color: var(--color-bg);
    }
  }
}

input[type='radio'] {
  border-radius: 100vh;

  &:checked {
    border-color: var(--theme-color);
    box-shadow: inset 0 0 0 0.25em var(--theme-color);
  }
}

/* Headings */
/* --------------------------------- */
:is(h1, h2, h3, h4, h5, h6) {
  margin: 2rem 0 1rem;
  color: var(--heading-color);
  font-weight: var(--heading-font-weight);
  line-height: calc(2px + 2ex + 2px);
}

h1 {
  font-size: var(--h1-font-size);
  font-weight: var(--h1-font-weight);

  &:first-of-type {
    margin-top: 0;
  }
}

h2 {
  font-size: var(--h2-font-size);
  font-weight: var(--h2-font-weight);
}

h3 {
  font-size: var(--h3-font-size);
  font-weight: var(--h3-font-weight);
}

h4 {
  margin-bottom: 0;
  font-size: var(--h4-font-size);
  font-weight: var(--h4-font-weight);

  & + :not(h1, h2, h3, h4, h5) {
    margin-top: 0.9rem;
  }
}

h5 {
  margin-bottom: 0;
  font-size: var(--h5-font-size);
  font-weight: var(--h5-font-weight);

  & + :not(h1, h2, h3, h4, h5) {
    margin-top: 0.75rem;
  }
}

h6 {
  margin-bottom: 0;
  font-weight: var(--h6-font-weight);

  &,
  & + :not(h1, h2, h3, h4, h5) {
    font-size: var(--h6-font-size);
  }

  & + :not(h1, h2, h3, h4, h5) {
    margin-top: 0.5rem;
  }
}

/* Lists */
/* ---------------------------------- */
ol,
ul {
  padding-inline-start: 1.5em;

  & & {
    margin-top: 0.25em;
    margin-bottom: 0.25em;
  }
}

ul.task-list {
  --_checkbox-margin: 0.2em;
  --_checkbox-offset: 1.6em;

  padding-inline-start: 0.6em;

  input[type='checkbox'] {
    margin-top: -0.15em;
    margin-right: var(--_checkbox-margin);
    margin-left: calc(0px - var(--_checkbox-offset));
  }

  li {
    position: relative;
    margin-top: var(--_checkbox-margin);
    margin-bottom: var(--_checkbox-margin);
    margin-left: var(--_checkbox-offset);
    list-style-type: none;

    /* Vertical Connector */
    &:has(.task-list) {
      &::before {
        content: '';
        position: absolute;
        z-index: -1;
        top: 1em;
        left: -1em;
        bottom: 0;
        border-left: 1px solid var(--color-mono-2);
      }
    }
  }

  ul.task-list {
    padding-inline-start: 1.5em;

    li {
      margin-left: var(--_checkbox-margin);
    }

    > li {
      /* Horizontal Connector */
      &::after {
        content: '';
        position: absolute;
        z-index: -1;
        top: 0.9em;
        left: -2.7em;
        width: 1.25em;
        border-top: 1px solid var(--color-mono-2);
        border-left: none;
      }

      /* Horizontal Connector + Mask */
      &:last-child {
        &::after {
          bottom: 0;
          background: var(--color-bg);
        }
      }
    }
  }
}

/* Tables */
/* ---------------------------------- */
th,
td {
  padding: 0.25em 0.75em;
  border: 1px solid var(--color-mono-2);
}

table {
  display: block;
  width: 100%;
  overflow: auto;
  border-collapse: collapse;
  border-spacing: 0;
}

thead {
  display: none;
  font-weight: bold;
  text-align: left;

  &:has(th:not(:empty)) {
    display: table-header-group;
  }
}

th {
  font-weight: var(--strong-font-weight);

  &:not([align]) {
    text-align: left;
  }
}

tr {
  border-top: 1px solid var(--color-mono-2);

  &:nth-child(2n) {
    background: var(--table-row-alt-bg);
  }
}
